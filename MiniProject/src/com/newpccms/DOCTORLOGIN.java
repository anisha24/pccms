/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.newpccms;

//import com.mysql.jdbc.Connection;
//import com.mysql.jdbc.Statement;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Anirudh Kowshik
 */
public class DOCTORLOGIN extends javax.swing.JFrame {

    
   
    
    public DOCTORLOGIN() {
        initComponents();
        jTabbedPane1.setBackground(new Color(255,255,255,235));
        jPanel1.setBackground(new Color(255,255,255,235));
        demo.setBackground(new Color(255,255,255,235));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        uname = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        docid_lab = new javax.swing.JLabel();
        phone = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        today_appointment_parent = new javax.swing.JScrollPane();
        today_app_table = new javax.swing.JTable();
        tdap = new javax.swing.JLabel();
        see_app_but = new javax.swing.JButton();
        np_app_today = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        app_dat = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        demo = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nam = new javax.swing.JLabel();
        degree = new javax.swing.JLabel();
        spec = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("NO APPOINTMENTS TODAY");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("USERNAME:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, -1, 27));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("DOCTOR ID :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, -1, 27));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("NAME :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 50, 74, 25));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/newpccms/logo.jpg"))); // NOI18N
        jLabel11.setText("jLabel11");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 140, 130));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("PHONE :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 60, -1, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("LOGOUT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1095, 10, -1, -1));
        getContentPane().add(uname, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, 183, 27));
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, 183, 31));
        getContentPane().add(docid_lab, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 10, 190, 27));
        getContentPane().add(phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 50, 190, 29));

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel1.setLayout(null);

        today_app_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PATIENT ID", "APPOINTMENT ID", "PATIENT NAME", "TIME", "AGE", "GENDER"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        today_appointment_parent.setViewportView(today_app_table);

        jPanel1.add(today_appointment_parent);
        today_appointment_parent.setBounds(50, 110, 870, 290);

        tdap.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tdap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tdap.setText("APPOINTMENTS");
        jPanel1.add(tdap);
        tdap.setBounds(50, 70, 870, 34);

        see_app_but.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        see_app_but.setText("TREAT THE PATIENT");
        see_app_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                see_app_butActionPerformed(evt);
            }
        });
        jPanel1.add(see_app_but);
        see_app_but.setBounds(50, 410, 870, 42);

        np_app_today.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        np_app_today.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        np_app_today.setText("NO APPOINTMENTS ");
        jPanel1.add(np_app_today);
        np_app_today.setBounds(140, 150, 690, 90);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("SELECT ANOTHER DAY:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(50, 20, 180, 30);

        jButton2.setText("SUBMIT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(550, 20, 210, 30);

        app_dat.setDateFormatString("yyyy-MM-dd");
        jPanel1.add(app_dat);
        app_dat.setBounds(230, 20, 230, 30);

        jTabbedPane1.addTab("TODAY'S APPOINTMENTS", jPanel1);

        demo.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("NAME :");
        demo.add(jLabel6);
        jLabel6.setBounds(60, 80, 186, 26);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("DEGREE:");
        demo.add(jLabel7);
        jLabel7.setBounds(60, 150, 186, 26);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("SPECIALITY:");
        demo.add(jLabel8);
        jLabel8.setBounds(60, 210, 186, 27);

        nam.setBackground(new java.awt.Color(255, 255, 255));
        demo.add(nam);
        nam.setBounds(270, 80, 430, 26);
        demo.add(degree);
        degree.setBounds(270, 150, 430, 26);
        demo.add(spec);
        spec.setBounds(270, 210, 430, 28);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1018, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 4, Short.MAX_VALUE)
                    .addComponent(demo, javax.swing.GroupLayout.PREFERRED_SIZE, 1009, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 5, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(demo, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("YOUR INFO", jPanel2);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, 490));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/newpccms/rsz_aerial-aerial-view-application-935869 (1).jpg"))); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        home v = new home();
        v.setVisible(true);
        close();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void see_app_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_see_app_butActionPerformed

        DOCTR v = new DOCTR();
        v.setVisible(true);
        int flag =0;
        // System.out.println("here");
        int r = today_app_table.getSelectedRow();
        int pid = Integer.parseInt(today_app_table.getModel().getValueAt(r,0).toString().substring(2));  //patient id of the selected patient
        
        v.piiid.setText(pid+""); //setting patient id to next page
        
        int apid = Integer.parseInt(today_app_table.getModel().getValueAt(r,1).toString());  //appointment id of the patient
        v.aiiip.setText(apid+"");
        v.aiiip.setVisible(false);
        String viid; //for storing the visit id
        int vii=0;
        
        String tiid;
        int tii=0;
        
        int dii = Integer.parseInt(docid_lab.getText().substring(2)); //docid

        v.uname.setText(uname.getText());
        v.name.setText(name.getText());
        v.p_id.setText(docid_lab.getText());
        v.phn.setText(phone.getText());

        v.dov_lab.setVisible(false);
        v.prob_lab.setVisible(false);
        v.syn_lab.setVisible(false);
        v.doc_name_dup.setVisible(false);
        v.dov.setVisible(false);
        v.problem.setVisible(false);
        v.synopsis.setVisible(false);
        v.med_lab.setVisible(false);
        v.table_parent_1.setVisible(false);
        v.det_pres_but.setVisible(false);
        v.no_prescription.setVisible(false);
        v.docname.setVisible(false);

        //test page

        v.test_doc.setVisible(false);
        v.test_type.setVisible(false);
        v.test_dot.setVisible(false);
        v.test_dos.setVisible(false);
        v.test_syno.setVisible(false);
        v.test_doc_name.setVisible(false);
        v.test_doc_type.setVisible(false);
        v.test_date.setVisible(false);
        v.test_suggested_date.setVisible(false);
        v.test_synopsis.setVisible(false);
        v.test_report_button.setVisible(false);
        v.no_records_test.setVisible(false);

        //scan page

        v.docn.setVisible(false);
        v.scann.setVisible(false);
        v.scan_dos.setVisible(false);
        v.scan_sd.setVisible(false);
        v.scan_syn.setVisible(false);
        v.scan_doc.setVisible(false);
        v.scan_type.setVisible(false);
        v.scan_date.setVisible(false);
        v.scan_sugges_date.setVisible(false);
        v.scan_synop.setVisible(false);
        v.scan_det_report.setVisible(false);

        DefaultTableModel model = (DefaultTableModel) v.past_appointment.getModel();
        
        DefaultTableModel mod = (DefaultTableModel) v.past_test_table.getModel();
        DefaultTableModel mo = (DefaultTableModel) v.past_scan_table.getModel();
        DefaultTableModel m = (DefaultTableModel) v.past_upload_table.getModel();
        DefaultTableModel md = (DefaultTableModel) v.past_scan_up_table.getModel();

        PreparedStatement ps;
        ResultSet rs;
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            String a="jdbc:mysql://localhost:3306/pccms";
            Connection con;
            con = (Connection)DriverManager.getConnection(a,"root","Password@1234");
            Statement stmt=(Statement)con.createStatement();
            String quer="SELECT * from patient_view where numpid='"+pid+"';";   // for dempgraphics page info
            //System.out.println("here");
            rs=stmt.executeQuery(quer);
            while(rs.next())
            {
                String na=rs.getString(2);
                String pi=rs.getString(1);
                String ge=rs.getString(5);
                String dat=rs.getString(3);
                String ema=rs.getString(6);
                String addr=rs.getString(8);
                String h=rs.getString(9);
                String w=rs.getString(10);
                String blg=rs.getString(11);
                String al=rs.getString(12);
                String phnu=rs.getString(7);
                String ag =rs.getString(4);
                String nump= rs.getString(13);
                int age1=Integer.parseInt(ag);
                
                
                
                v.nam.setText(na);
                v.age.setText(ag);
                v.dob.setText(dat);
                v.add.setText(addr);

                if(ge.equalsIgnoreCase("M"))
                v.gen.setText("Male");
                else
                v.gen.setText("Female");

                if(blg.equalsIgnoreCase("O+"))
                    v.bg.setText("O +ve");
                else if(blg.equalsIgnoreCase("O-"))
                    v.bg.setText("O -ve");
                else if(blg.equalsIgnoreCase("A+"))
                    v.bg.setText("A +ve");
                else if(blg.equalsIgnoreCase("A-"))
                    v.bg.setText("A -ve");
                else if(blg.equalsIgnoreCase("B+"))
                    v.bg.setText("B +ve");
                else if(blg.equalsIgnoreCase("B-"))
                    v.bg.setText("B -ve");
                else if(blg.equalsIgnoreCase("AB+"))
                    v.bg.setText("AB +ve");
                else if(blg.equalsIgnoreCase("AB-"))
                    v.bg.setText("AB -ve");
                v.hei.setText(h);
                v.wei.setText(w);
                v.all.setText(al);
                v.impid.setText(nump);
                v.impid.setVisible(false);

            }
            String pi=v.impid.getText();
            String que="call current_med_info("+pid+");";   //for info of current medication
            System.out.println("here");
            rs=stmt.executeQuery(que);
            while(rs.next())
            {
                String doc = rs.getString(1);
                String visd = rs.getString(2);
                String fold = rs.getString(3);
                String prob = rs.getString(4);
                String summ = rs.getString(5);

                v.doc_name.setText(doc);
                v.visit_date.setText(visd);
                v.follow_date.setText(fold);
                v.prob.setText(prob);
                v.synop.setText(summ);

            }

            String q="call past_medications("+pid+");";   //for past medications table
            rs=stmt.executeQuery(q);
            while(rs.next())
            {
                String col1=rs.getString(1);
                String col2=rs.getString(2);
                String col3=rs.getString(3);
                String col4=rs.getString(4);
                Object[] row = { col1, col2, col3, col4 };
                model.addRow(row);

            }

            String qwer= "call past_test_display("+pid+");";  //for past test table
            rs=stmt.executeQuery(qwer);
            while(rs.next())
            {
                String col1=rs.getString(1);
                String col2=rs.getString(2);
                String col3=rs.getString(3);
                Object[] row = { col1, col2, col3};
                mod.addRow(row);
            }

            String qweq= "call past_scan("+pid+");";   // for past scan table
            rs=stmt.executeQuery(qweq);
            while(rs.next())
            {
                String col1=rs.getString(1);
                String col2=rs.getString(2);
                String col3=rs.getString(3);
                Object[] row = { col1, col2, col3};
                mo.addRow(row);
            }
            String qtt ="select isnull(t.prescription_pdf) from treatment t, visit v, patient p where v.vid = t.treatment_vid and p.pid = v.vis_pid and p.pid="+pid+";";   // used for testing whether pdf is there or not for enabling the button
            rs=stmt.executeQuery(qtt);
            if(rs.next())
            {
                int i = rs.getInt(1);
                if(i==1)
                flag =1;
            }
            String qs = "update appointments set treated = 1 where appid = "+apid+";";    //used to update treated to 1 for activating the database trigger
            ps = con.prepareStatement(qs);
            ps.executeUpdate();

            String qte = "select vid from visit where vis_appid = "+apid+";";  //fetch the visit id newly generated after the trigger
            rs = stmt.executeQuery(qte);
            if(rs.next())
            {
                viid = rs.getString(1);
                vii = rs.getInt(1);
                v.v_id.setText(viid);  //assign the value
                v.v_id.setVisible(false); //make it invisible
                System.out.println(viid);
            }

            String qwvd = " insert into treatment(treatment_pid,treatment_docid,treatment_vid) values ("+pid+","+dii+","+vii+");"; //to create treatment row for that visit
            ps = con.prepareStatement(qwvd);
            ps.executeUpdate();

            
            
            String qqt = "select tid from treatment where treatment_vid = "+vii+";"; //to get the treatment id
            rs = stmt.executeQuery(qqt);
            while(rs.next())
            {
                 tiid = rs.getString(1);
                 tii = rs.getInt(1);
                v.t_id.setText(tiid);  //assign the value
                v.t_id.setVisible(false); //make it invisible
                System.out.println(tiid);
            }
            
            String qq = "select problem from visit where vid = "+vii+";"; //to get the problem
            rs = stmt.executeQuery(qq);
            while(rs.next())
            {
                String resy = rs.getString(1);
                v.symp_t.setText(resy);
            }
            String dde = "call upload_test("+pid+","+dii+");";
            rs = stmt.executeQuery(dde);
            while(rs.next())
            {
                String col1=rs.getString(1);
                String col2=rs.getString(2);
                String col3=rs.getString(3);
                Object[] row = { col1, col2, col3};
                m.addRow(row);
            }
            String ddde = "call upload_scan("+pid+","+dii+");";
            rs = stmt.executeQuery(ddde);
            while(rs.next())
            {
                String col1=rs.getString(1);
                String col2=rs.getString(2);
                String col3=rs.getString(3);
                Object[] row = { col1, col2, col3};
                md.addRow(row);
            }
            
            
            rs.close();
        }

        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e.getMessage());
        }

        
        if(md.getRowCount() == 0)
        {
            v.past_sc_la.setVisible(false);
            v.past_scan_up_parent.setVisible(false);
            v.upl_tf.setVisible(false);
            v.syn_tf.setVisible(false);
            v.sc_up_bu.setVisible(false);
            v.no_pe_sc.setVisible(true);
            
            
            
        }
        else
        {
            v.past_sc_la.setVisible(true);
            v.past_scan_up_parent.setVisible(true);
            v.upl_tf.setVisible(true);
            v.syn_tf.setVisible(true);
            v.sc_up_bu.setVisible(true);
            v.no_pe_sc.setVisible(false);
            v.past_scan_up_table.setRowSelectionInterval(0,0);
            
        }
        
        
        
        if(m.getRowCount() == 0)
        {
            v.past_test_lab.setVisible(false);
            v.past_upload_parent.setVisible(false);
            v.upload_lab.setVisible(false);
            v.synops_lab.setVisible(false);
            v.uplo_te_but.setVisible(false);
            v.no_pending_tests.setVisible(true);
           
        }
        else
        {
            v.past_test_lab.setVisible(true);
            v.past_upload_parent.setVisible(true);
            v.upload_lab.setVisible(true);
            v.synops_lab.setVisible(true);
            v.uplo_te_but.setVisible(true);
            v.no_pending_tests.setVisible(false);
             v.past_upload_table.setRowSelectionInterval(0,0);
        }
        
        
        
        
        if(mo.getRowCount() == 0)
        {
            v.past_scan_lab.setVisible(false);
            v.past_scan_parent.setVisible(false);
            v.check_but.setVisible(false);
            v.no_past_scan.setVisible(true);
        }
        else
        {
            v.past_scan_lab.setVisible(true);
            v.past_scan_parent.setVisible(true);
            v.check_but.setVisible(true);
            v.no_past_scan.setVisible(false);
            v.past_scan_table.setRowSelectionInterval(0, 0);
        }

        if(mod.getRowCount() == 0)
        {
            v.past_test_label.setVisible(false);
            v.past_test_parent.setVisible(false);
            v.view_test_button.setVisible(false);
            v.no_records_test.setVisible(true);
        }
        else
        {
            v.past_test_label.setVisible(true);
            v.past_test_parent.setVisible(true);
            v.view_test_button.setVisible(true);
            v.no_records_test.setVisible(false);
            v.past_test_table.setRowSelectionInterval(0, 0);
        }
        

        if(model.getRowCount() ==  0)
        {
            v.appointment_parent.setVisible(false);
            v.appointment_label.setVisible(false);
            v.check_button.setVisible(false);
            v.no_records.setVisible(true);
            v.dn.setVisible(false);
            v.dv.setVisible(false);
            v.fud.setVisible(false);
            v.pb.setVisible(false);
            v.syn.setVisible(false);

            
            v.doc_name.setVisible(false);
            v.visit_date.setVisible(false);
            v.follow_date.setVisible(false);
            v.prob.setVisible(false);
            v.synop.setVisible(false);

            v.no_recent_visit.setVisible(true);
        }
        else
        {
            v.appointment_parent.setVisible(true);
            v.appointment_label.setVisible(true);
            v.check_button.setVisible(true);
            v.no_records.setVisible(false);
            v.no_recent_visit.setVisible(false);
            v.past_appointment.setRowSelectionInterval(0,0);
        }
        

        v.rem_but.setVisible(false);
        v.pre_nt.setEnabled(false);
        v.pre_ns.setEnabled(false);
        //v.add_but.setVisible(false);

        v.piiid.setVisible(false);
        v.setVisible(true);
        close();
    }//GEN-LAST:event_see_app_butActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        
	
	
        
        DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
        String da = fmt.format(app_dat.getDate()); //stores selected day
        Date ddt = null;
        try 
        {
            ddt = fmt.parse(da);
        } 
        catch (ParseException ex) 
        {
            Logger.getLogger(DOCTORLOGIN.class.getName()).log(Level.SEVERE, null, ex);
        }
        Date date = new Date();
        
        
        
        Date cudat = date; //stores current date
        
        int di = Integer.parseInt(docid_lab.getText().substring(2).toString()); //stores docid
        
        DefaultTableModel model = (DefaultTableModel) today_app_table.getModel();
        model.setRowCount(0);
        
        ResultSet rs;
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            String a="jdbc:mysql://localhost:3306/pccms";
            Connection con;
            con = (Connection)DriverManager.getConnection(a,"root","Password@1234");
            Statement stmt=(Statement)con.createStatement();
            String quer="call any_appointment("+di+",'"+da+"');";   // for checking appointments on that day 
            rs=stmt.executeQuery(quer);
            while(rs.next())
            {
                String s1 = rs.getString(1);
                String s2 = rs.getString(2);
                String s3 = rs.getString(3);
                String s4 = rs.getString(4);
                String s5 = rs.getString(5);
                String s6 = rs.getString(7);
                
                Object[] row = { s1,s6, s2, s3, s4,s5 };
                model.addRow(row);
            }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
        
        int compa = cudat.compareTo(ddt);
        System.out.println(compa);
        if(compa == 1)
        {
            see_app_but.setEnabled(true);
            System.out.println("true");
            
        }
        else if(compa == -1)
        {
            see_app_but.setEnabled(false);
            System.out.println("false");
        }
        
        if(model.getRowCount() == 0)
        {
            today_appointment_parent.setVisible(false);
            tdap.setVisible(false);
            see_app_but.setVisible(false);
            np_app_today.setVisible(true);
        }
        else
        {
            today_app_table.setRowSelectionInterval(0,0);
            today_appointment_parent.setVisible(true);
            tdap.setVisible(true);
            see_app_but.setVisible(true);
            np_app_today.setVisible(false);
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DOCTORLOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DOCTORLOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DOCTORLOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DOCTORLOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DOCTORLOGIN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public com.toedter.calendar.JDateChooser app_dat;
    public javax.swing.JLabel degree;
    public javax.swing.JPanel demo;
    public javax.swing.JLabel docid_lab;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    public javax.swing.JLabel nam;
    public javax.swing.JLabel name;
    public javax.swing.JLabel np_app_today;
    public javax.swing.JLabel phone;
    public javax.swing.JButton see_app_but;
    public javax.swing.JLabel spec;
    public javax.swing.JLabel tdap;
    public javax.swing.JTable today_app_table;
    public javax.swing.JScrollPane today_appointment_parent;
    public javax.swing.JLabel uname;
    // End of variables declaration//GEN-END:variables


    public void close()
    {
        WindowEvent winClosingEvent= new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }


}
